Run('fx-9860g-emulator/NewGraph.exe', 'fx-9860g-emulator')
WinWait('NewGraph', '', 1)
WinActivate('NewGraph')
$pos = WinGetPos('[ACTIVE]')
$x = $pos[0]
$y = $pos[1]

Send('B') ; open program menu
Send('{F3}') ; start new prog
; Send the program name in lowercase to avoid a strange ALPHA-LOCK behaviour
Send('fireworks{ENTER}') ; file name - at most 8 chars

; program text starts here

Send('"FIREWORKS"{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F3}{F1}') ; ViewWindow
Send('1,1.94,10,1,1.62,10{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('>0.8')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is SKTCH)
Send('{F4}') ; SKTCH (state is ["SKTCH"])
Send('{F1}') ; Cls (state is ["SKTCH"])
Send('{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*0.4{+}(0.94*0.5){+}1-0.2')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('A{ENTER}')
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*0.7{+}(0.94*0.5){+}1-0.35')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('C{ENTER}')
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*0.4{+}(0.62*0.5){+}1-0.1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('D{ENTER}')
Send('15')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('N:N')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('M:')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*3)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is OPTN -> more -> PROB)
MouseClick('left', $x + 117, $y + 413) ; rho (state is OPTN -> more -> PROB)
Send('{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')
Send('(NA{+}(M-N)C)/M')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('(N{+}(M-N)D)/M')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('=0{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 117, $y + 413) ; rho
Send('=1')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 117, $y + 413) ; rho
Send('=2')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F5}') ; Dsz  (state is ["PRGM", "JUMP"])
Send('N{ENTER}')
Send('N=0{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*3)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('R:{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*0.2{+}0.05')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('L:0')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('S:')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*11){+}4')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('T:1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('N{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('3{ENTER}')
Send('90')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('4{ENTER}')
Send('NL/6*')
MouseClick('left', $x + 246, $y + 451) ; cos (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}C')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('NL/6*')
MouseClick('left', $x + 202, $y + 451) ; sin (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}D')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('=0{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 117, $y + 413) ; rho
Send('=1')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 117, $y + 413) ; rho
Send('=2')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT
Send('{F4}{F6}{F1}{F1}') ; Plot
Send('X,Y{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 159, $y + 413) ; theta
Send('{+}360/T')
MouseClick('left', $x + 290, $y + 487) ; ->
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 159, $y + 413) ; theta
Send('{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA
MouseClick('left', $x + 159, $y + 413) ; theta
Send('<(360{+}90)')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('4{ENTER}')
Send('{F4}') ; Isz  (state is ["PRGM", "JUMP"])
Send('N{ENTER}')
Send('N')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F6}') ; more (state is ["PRGM", "more"])
Send('{F3}') ; REL (state is ["PRGM", "more", "REL"])
Send('{F6}') ; <= (state is ["PRGM", "more", "REL"])
Send('6')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('3{ENTER}')
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')

; end program text

MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM -> JUMP)
MouseClick('left', $x + 202, $y + 413) ; QUIT (state is PRGM -> JUMP)
Send('{F1}') ; EXE
