Run('fx-9860g-emulator/NewGraph.exe', 'fx-9860g-emulator')
WinWait('NewGraph', '', 1)
WinActivate('NewGraph')
$pos = WinGetPos('[ACTIVE]')
$x = $pos[0]
$y = $pos[1]

Send('B') ; open program menu
Send('{F3}') ; start new prog
; Send the program name in lowercase to avoid a strange ALPHA-LOCK behaviour
Send('mastermind{ENTER}') ; file name - at most 8 chars

; program text starts here

Send('"MASTER MIND"{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('G{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('H{ENTER}')
Send('H=G')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('I{ENTER}')
Send('I=H')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('J{ENTER}')
Send('J=I')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
Send('0')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('9{ENTER}')
Send('X{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('?')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('F{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('F{ENTER}')
Send('(10*({F3}') ; Frac  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('D{ENTER}')
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('F{ENTER}')
Send('(10*({F3}') ; Frac  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('C{ENTER}')
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('F{ENTER}')
Send('(10*({F3}') ; Frac  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('B{ENTER}')
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('F{ENTER}')
Send('(10*({F3}') ; Frac  (state is ["OPTN", "more", "NUM"])
Send('(F*0.1)))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('A{ENTER}')
Send('0')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is OPTN -> more -> NUM)
MouseClick('left', $x + 117, $y + 413) ; rho (state is OPTN -> more -> NUM)
Send('{ENTER}')
Send('0')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is OPTN -> more -> NUM)
MouseClick('left', $x + 159, $y + 413) ; theta (state is OPTN -> more -> NUM)
Send('{ENTER}')
Send('G')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('P{ENTER}')
Send('H')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('Q{ENTER}')
Send('I')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('R{ENTER}')
Send('J')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('S{ENTER}')
Send('A=P')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{ENTER}')
Send('A=P{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('P{ENTER}')
Send('B=Q{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{ENTER}')
Send('B=Q{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Q{ENTER}')
Send('C=R{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{ENTER}')
Send('C=R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('D=S{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
Send('{ENTER}')
Send('D=S{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('S{ENTER}')
Send('"HITS="{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('A=Q')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('A=Q{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Q{ENTER}')
Send('A=R{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('A=R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('A=S{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('A=S{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('S{ENTER}')
Send('B=P{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('B=P{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('P{ENTER}')
Send('B=R{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('B=R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('B=S{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('B=S{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('S{ENTER}')
Send('C=P{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('C=P{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('P{ENTER}')
Send('C=Q{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('C=Q{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Q{ENTER}')
Send('C=S{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('C=S{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('S{ENTER}')
Send('D=P{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('D=P{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('P{ENTER}')
Send('D=Q{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('D=Q{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('Q{ENTER}')
Send('D=R{F3}') ; => (state is ["PRGM", "JUMP"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{+}1')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
Send('{ENTER}')
Send('D=R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('10')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('"HALF="{ENTER}')
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM -> JUMP)
MouseClick('left', $x + 159, $y + 413) ; theta (state is PRGM -> JUMP)
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
MouseClick('left', $x + 73, $y + 413) ; ALPHA (state is PRGM)
MouseClick('left', $x + 117, $y + 413) ; rho (state is PRGM)
Send('=4')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('8{ENTER}')
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('9{ENTER}')
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('8{ENTER}')
Send('"YOU"{ENTER}')
Send('"W   W III N  N"{ENTER}')
Send('"W   W  I  NN N"{ENTER}')
Send('"W W W  I  N NN"{ENTER}')
Send('" W W  III N  N"{ENTER}')
Send('"IN"{ENTER}')
Send('X')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])

; end program text

MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 202, $y + 413) ; QUIT (state is PRGM)
Send('{F1}') ; EXE
