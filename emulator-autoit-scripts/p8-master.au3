Run('fx-9860g-emulator/NewGraph.exe', 'fx-9860g-emulator')
WinWait('NewGraph', '', 1)
WinActivate('NewGraph')
$pos = WinGetPos('[ACTIVE]')
$x = $pos[0]
$y = $pos[1]

Send('B') ; open program menu
Send('{F3}') ; start new prog
; Send the program name in lowercase to avoid a strange ALPHA-LOCK behaviour
Send('master{ENTER}') ; file name - at most 8 chars

; program text starts here

Send('"MASTER"{ENTER}')
Send('5000')
MouseClick('left', $x + 290, $y + 487) ; ->
Send('R{ENTER}')
Send('5000')
MouseClick('left', $x + 290, $y + 487) ; ->
Send('T{ENTER}')
Send('2')
MouseClick('left', $x + 290, $y + 487) ; ->
Send('P{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('((')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*10){+}10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('L{ENTER}')
Send('"YOU HAVE..."{ENTER}')
Send('"POPULATION="{ENTER}')
Send('P')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('"RICE="{ENTER}')
Send('R{F5}') ; print result (state is ["PRGM"])
Send('"ACRES="{ENTER}')
Send('T{F5}') ; print result (state is ["PRGM"])
Send('"LAND"{ENTER}')
Send('"COSTS"{ENTER}')
Send('L{F5}') ; print result (state is ["PRGM"])
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')
Send('"HOW MANY ACRES"{ENTER}')
Send('"DO YOU WANT TO"{ENTER}')
Send('"BUY":?')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('A{ENTER}')
Send('(A*L)>R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('"ALL YOU CAN"{ENTER}')
Send('(A*L)>R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('"AFFORD IS"{ENTER}')
Send('(A*L)>R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('R/L')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('(A*L)>R')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')
Send('R-(A*L)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('T{+}A')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('T{ENTER}')
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('3{ENTER}')
Send('"HOW MANY ACRES"{ENTER}')
Send('"DO YOU WANT TO"{ENTER}')
Send('"SELL":?')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('A{ENTER}')
Send('A>T{F3}') ; => (state is ["PRGM", "JUMP"])
Send('"YOU ONLY HAVE"{ENTER}')
Send('A>T{F3}') ; => (state is ["PRGM", "JUMP"])
Send('T')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('A>T')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('"ACRES"{ENTER}')
Send('A>T{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('3{ENTER}')
Send('T-A')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('T{ENTER}')
Send('(A*L){+}R')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('"HOW MANY KGS"{ENTER}')
Send('"OF RICE DO YOU"{ENTER}')
Send('"WANT TO PLANT":{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('4{ENTER}')
Send('"(YOU CAN PLANT)"{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F2}') ; CTL (state is ["PRGM", "CTL"])
Send('{F1}') ; Prog (state is ["PRGM", "CTL"])
Send('"PROG2"{ENTER}')
Send('G')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('?')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('A{ENTER}')
Send('A>G')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('4{ENTER}')
Send('R-A')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F2}') ; CTL (state is ["PRGM", "CTL"])
Send('{F1}') ; Prog (state is ["PRGM", "CTL"])
Send('"PROGJ"{ENTER}')
Send('P>0')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
Send('"YOU HAVE NO"{ENTER}')
Send('"PEOPLE LEFT"{ENTER}')

; end program text

MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM -> JUMP)
MouseClick('left', $x + 202, $y + 413) ; QUIT (state is PRGM -> JUMP)
Send('{F3}') ; start new prog
; Send the program name in lowercase to avoid a strange ALPHA-LOCK behaviour
Send('prog2{ENTER}') ; file name - at most 8 chars

; program text starts here

Send('(P*10)>T')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('T')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('(P*10)')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F6}') ; more (state is ["PRGM", "more"])
Send('{F3}') ; REL (state is ["PRGM", "more", "REL"])
Send('{F6}') ; <= (state is ["PRGM", "more", "REL"])
Send('T')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('(P*10)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('X{ENTER}')
Send('X')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F6}') ; more (state is ["PRGM", "more"])
Send('{F3}') ; REL (state is ["PRGM", "more", "REL"])
Send('{F6}') ; <= (state is ["PRGM", "more", "REL"])
Send('R')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('X')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('G{ENTER}')
Send('X>R{F3}') ; => (state is ["PRGM", "JUMP"])
Send('R')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('G{ENTER}')

; end program text

MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM -> JUMP)
MouseClick('left', $x + 202, $y + 413) ; QUIT (state is PRGM -> JUMP)
Send('{F3}') ; start new prog
; Send the program name in lowercase to avoid a strange ALPHA-LOCK behaviour
Send('progj{ENTER}') ; file name - at most 8 chars

; program text starts here

Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(A*((')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*4){+}0.5)))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('J{ENTER}')
Send('0')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('"--NEXT YEAR--"{ENTER}')
Send('"YOU HARVESTED"{ENTER}')
Send('J{F5}') ; print result (state is ["PRGM"])
Send('"KGS OF RICE"{ENTER}')
Send('R{+}J')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('R{ENTER}')
Send('((')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*0.5){+}0.5)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('C{ENTER}')
Send('"RATS ATE"{ENTER}')
Send('R-(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(C*R))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('O')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('R-O')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('R{ENTER}')
Send('P*2')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('J{ENTER}')
Send('R')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F6}') ; more (state is ["PRGM", "more"])
Send('{F3}') ; REL (state is ["PRGM", "more", "REL"])
Send('{F5}') ; >= (state is ["PRGM", "more", "REL"])
Send('J')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
Send('J-R')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('A{ENTER}')
Send('A/2')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('A{ENTER}')
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(A))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('A{ENTER}')
Send('P-A')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('P{ENTER}')
Send('({F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(P))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('P{ENTER}')
Send('A')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('"PEOPLE STARVED"{ENTER}')
Send('J-(A*2)')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('J{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('1{ENTER}')
Send('R-J')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM -> JUMP)
Send('R{ENTER}')
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(((')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*1){+}1)*P))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('N')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F5}') ; print result (state is ["PRGM"])
Send('"PEOPLE WERE"{ENTER}')
Send('"BORN"{ENTER}')
Send('N{+}P')
MouseClick('left', $x + 290, $y + 487) ; -> (state is PRGM)
Send('P{ENTER}')
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F3}') ; PROB (state is ["OPTN", "more", "PROB"])
Send('{F4}') ; Ran# (state is ["OPTN", "more", "PROB"])
Send('*20))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> PROB)
Send('A{ENTER}')
Send('A')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F6}') ; more (state is ["PRGM", "more"])
Send('{F3}') ; REL (state is ["PRGM", "more", "REL"])
Send('{F2}') ; != (state is ["PRGM", "more", "REL"])
Send('15')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F3}') ; => (state is ["PRGM", "JUMP"])
Send('{F2}') ; Goto  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')
Send('"PLAGUE KILLED"{ENTER}')
Send('"HALF YOUR"{ENTER}')
Send('"PEOPLE"{ENTER}')
Send('(')
MouseClick('left', $x + 117, $y + 376) ; OPTN (state is OPTN)
Send('{F6}') ; more (state is ["OPTN", "more"])
Send('{F4}') ; NUM (state is ["OPTN", "more", "NUM"])
Send('{F2}') ; Int  (state is ["OPTN", "more", "NUM"])
Send('(P*0.5))')
MouseClick('left', $x + 290, $y + 487) ; -> (state is OPTN -> more -> NUM)
Send('P{ENTER}')
MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM)
MouseClick('left', $x + 159, $y + 376) ; PRGM (state is PRGM)
Send('{F3}') ; JUMP (state is ["PRGM", "JUMP"])
Send('{F1}') ; Lbl  (state is ["PRGM", "JUMP"])
Send('2{ENTER}')

; end program text

MouseClick('left', $x + 73, $y + 376) ; SHIFT (state is PRGM -> JUMP)
MouseClick('left', $x + 202, $y + 413) ; QUIT (state is PRGM -> JUMP)
Send('{F1}') ; EXE
