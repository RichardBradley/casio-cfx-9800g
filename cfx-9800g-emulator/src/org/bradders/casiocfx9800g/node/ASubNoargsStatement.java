/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.bradders.casiocfx9800g.node;

import org.bradders.casiocfx9800g.analysis.*;

@SuppressWarnings("nls")
public final class ASubNoargsStatement extends PStatement
{
    private TSubNoargsName _subNoargsName_;

    public ASubNoargsStatement()
    {
        // Constructor
    }

    public ASubNoargsStatement(
        @SuppressWarnings("hiding") TSubNoargsName _subNoargsName_)
    {
        // Constructor
        setSubNoargsName(_subNoargsName_);

    }

    @Override
    public Object clone()
    {
        return new ASubNoargsStatement(
            cloneNode(this._subNoargsName_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubNoargsStatement(this);
    }

    public TSubNoargsName getSubNoargsName()
    {
        return this._subNoargsName_;
    }

    public void setSubNoargsName(TSubNoargsName node)
    {
        if(this._subNoargsName_ != null)
        {
            this._subNoargsName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._subNoargsName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._subNoargsName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._subNoargsName_ == child)
        {
            this._subNoargsName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._subNoargsName_ == oldChild)
        {
            setSubNoargsName((TSubNoargsName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
