/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.bradders.casiocfx9800g.node;

import org.bradders.casiocfx9800g.analysis.*;

@SuppressWarnings("nls")
public final class AFractionAtom extends PAtom
{
    private PFractionLiteral _fractionLiteral_;

    public AFractionAtom()
    {
        // Constructor
    }

    public AFractionAtom(
        @SuppressWarnings("hiding") PFractionLiteral _fractionLiteral_)
    {
        // Constructor
        setFractionLiteral(_fractionLiteral_);

    }

    @Override
    public Object clone()
    {
        return new AFractionAtom(
            cloneNode(this._fractionLiteral_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFractionAtom(this);
    }

    public PFractionLiteral getFractionLiteral()
    {
        return this._fractionLiteral_;
    }

    public void setFractionLiteral(PFractionLiteral node)
    {
        if(this._fractionLiteral_ != null)
        {
            this._fractionLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fractionLiteral_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fractionLiteral_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fractionLiteral_ == child)
        {
            this._fractionLiteral_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fractionLiteral_ == oldChild)
        {
            setFractionLiteral((PFractionLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
