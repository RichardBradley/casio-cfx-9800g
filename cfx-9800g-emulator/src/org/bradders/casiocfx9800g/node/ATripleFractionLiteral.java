/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.bradders.casiocfx9800g.node;

import org.bradders.casiocfx9800g.analysis.*;

@SuppressWarnings("nls")
public final class ATripleFractionLiteral extends PFractionLiteral
{
    private TNumberLiteral _units_;
    private TFractionSep _firstSep_;
    private TNumberLiteral _numerator_;
    private TFractionSep _secondSep_;
    private TNumberLiteral _denominator_;

    public ATripleFractionLiteral()
    {
        // Constructor
    }

    public ATripleFractionLiteral(
        @SuppressWarnings("hiding") TNumberLiteral _units_,
        @SuppressWarnings("hiding") TFractionSep _firstSep_,
        @SuppressWarnings("hiding") TNumberLiteral _numerator_,
        @SuppressWarnings("hiding") TFractionSep _secondSep_,
        @SuppressWarnings("hiding") TNumberLiteral _denominator_)
    {
        // Constructor
        setUnits(_units_);

        setFirstSep(_firstSep_);

        setNumerator(_numerator_);

        setSecondSep(_secondSep_);

        setDenominator(_denominator_);

    }

    @Override
    public Object clone()
    {
        return new ATripleFractionLiteral(
            cloneNode(this._units_),
            cloneNode(this._firstSep_),
            cloneNode(this._numerator_),
            cloneNode(this._secondSep_),
            cloneNode(this._denominator_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATripleFractionLiteral(this);
    }

    public TNumberLiteral getUnits()
    {
        return this._units_;
    }

    public void setUnits(TNumberLiteral node)
    {
        if(this._units_ != null)
        {
            this._units_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._units_ = node;
    }

    public TFractionSep getFirstSep()
    {
        return this._firstSep_;
    }

    public void setFirstSep(TFractionSep node)
    {
        if(this._firstSep_ != null)
        {
            this._firstSep_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._firstSep_ = node;
    }

    public TNumberLiteral getNumerator()
    {
        return this._numerator_;
    }

    public void setNumerator(TNumberLiteral node)
    {
        if(this._numerator_ != null)
        {
            this._numerator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numerator_ = node;
    }

    public TFractionSep getSecondSep()
    {
        return this._secondSep_;
    }

    public void setSecondSep(TFractionSep node)
    {
        if(this._secondSep_ != null)
        {
            this._secondSep_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._secondSep_ = node;
    }

    public TNumberLiteral getDenominator()
    {
        return this._denominator_;
    }

    public void setDenominator(TNumberLiteral node)
    {
        if(this._denominator_ != null)
        {
            this._denominator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._denominator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._units_)
            + toString(this._firstSep_)
            + toString(this._numerator_)
            + toString(this._secondSep_)
            + toString(this._denominator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._units_ == child)
        {
            this._units_ = null;
            return;
        }

        if(this._firstSep_ == child)
        {
            this._firstSep_ = null;
            return;
        }

        if(this._numerator_ == child)
        {
            this._numerator_ = null;
            return;
        }

        if(this._secondSep_ == child)
        {
            this._secondSep_ = null;
            return;
        }

        if(this._denominator_ == child)
        {
            this._denominator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._units_ == oldChild)
        {
            setUnits((TNumberLiteral) newChild);
            return;
        }

        if(this._firstSep_ == oldChild)
        {
            setFirstSep((TFractionSep) newChild);
            return;
        }

        if(this._numerator_ == oldChild)
        {
            setNumerator((TNumberLiteral) newChild);
            return;
        }

        if(this._secondSep_ == oldChild)
        {
            setSecondSep((TFractionSep) newChild);
            return;
        }

        if(this._denominator_ == oldChild)
        {
            setDenominator((TNumberLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
