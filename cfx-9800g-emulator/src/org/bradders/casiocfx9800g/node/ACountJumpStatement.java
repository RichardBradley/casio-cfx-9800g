/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.bradders.casiocfx9800g.node;

import org.bradders.casiocfx9800g.analysis.*;

@SuppressWarnings("nls")
public final class ACountJumpStatement extends PStatement
{
    private TCountJumpOp _countJumpOp_;
    private TSpace _space_;
    private TVariableName _variableName_;
    private TStatementSeparator _statementSeparator_;
    private PStatement _statement_;

    public ACountJumpStatement()
    {
        // Constructor
    }

    public ACountJumpStatement(
        @SuppressWarnings("hiding") TCountJumpOp _countJumpOp_,
        @SuppressWarnings("hiding") TSpace _space_,
        @SuppressWarnings("hiding") TVariableName _variableName_,
        @SuppressWarnings("hiding") TStatementSeparator _statementSeparator_,
        @SuppressWarnings("hiding") PStatement _statement_)
    {
        // Constructor
        setCountJumpOp(_countJumpOp_);

        setSpace(_space_);

        setVariableName(_variableName_);

        setStatementSeparator(_statementSeparator_);

        setStatement(_statement_);

    }

    @Override
    public Object clone()
    {
        return new ACountJumpStatement(
            cloneNode(this._countJumpOp_),
            cloneNode(this._space_),
            cloneNode(this._variableName_),
            cloneNode(this._statementSeparator_),
            cloneNode(this._statement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACountJumpStatement(this);
    }

    public TCountJumpOp getCountJumpOp()
    {
        return this._countJumpOp_;
    }

    public void setCountJumpOp(TCountJumpOp node)
    {
        if(this._countJumpOp_ != null)
        {
            this._countJumpOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._countJumpOp_ = node;
    }

    public TSpace getSpace()
    {
        return this._space_;
    }

    public void setSpace(TSpace node)
    {
        if(this._space_ != null)
        {
            this._space_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._space_ = node;
    }

    public TVariableName getVariableName()
    {
        return this._variableName_;
    }

    public void setVariableName(TVariableName node)
    {
        if(this._variableName_ != null)
        {
            this._variableName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variableName_ = node;
    }

    public TStatementSeparator getStatementSeparator()
    {
        return this._statementSeparator_;
    }

    public void setStatementSeparator(TStatementSeparator node)
    {
        if(this._statementSeparator_ != null)
        {
            this._statementSeparator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statementSeparator_ = node;
    }

    public PStatement getStatement()
    {
        return this._statement_;
    }

    public void setStatement(PStatement node)
    {
        if(this._statement_ != null)
        {
            this._statement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._countJumpOp_)
            + toString(this._space_)
            + toString(this._variableName_)
            + toString(this._statementSeparator_)
            + toString(this._statement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._countJumpOp_ == child)
        {
            this._countJumpOp_ = null;
            return;
        }

        if(this._space_ == child)
        {
            this._space_ = null;
            return;
        }

        if(this._variableName_ == child)
        {
            this._variableName_ = null;
            return;
        }

        if(this._statementSeparator_ == child)
        {
            this._statementSeparator_ = null;
            return;
        }

        if(this._statement_ == child)
        {
            this._statement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._countJumpOp_ == oldChild)
        {
            setCountJumpOp((TCountJumpOp) newChild);
            return;
        }

        if(this._space_ == oldChild)
        {
            setSpace((TSpace) newChild);
            return;
        }

        if(this._variableName_ == oldChild)
        {
            setVariableName((TVariableName) newChild);
            return;
        }

        if(this._statementSeparator_ == oldChild)
        {
            setStatementSeparator((TStatementSeparator) newChild);
            return;
        }

        if(this._statement_ == oldChild)
        {
            setStatement((PStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
