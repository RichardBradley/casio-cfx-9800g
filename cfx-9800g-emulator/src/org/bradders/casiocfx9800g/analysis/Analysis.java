/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.bradders.casiocfx9800g.analysis;

import org.bradders.casiocfx9800g.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseASingleProgram(ASingleProgram node);
    void caseASequenceProgram(ASequenceProgram node);
    void caseAPrintStatement(APrintStatement node);
    void caseAAssignStatement(AAssignStatement node);
    void caseAFuncStatement(AFuncStatement node);
    void caseALabelStatement(ALabelStatement node);
    void caseAGotoStatement(AGotoStatement node);
    void caseATermExpression(ATermExpression node);
    void caseAPlusExpression(APlusExpression node);
    void caseAMinusExpression(AMinusExpression node);
    void caseAFactorTerm(AFactorTerm node);
    void caseAMultTerm(AMultTerm node);
    void caseADivTerm(ADivTerm node);
    void caseAMultadjTerm(AMultadjTerm node);
    void caseAAtomFactor(AAtomFactor node);
    void caseAPowerFactor(APowerFactor node);
    void caseAVarAtom(AVarAtom node);
    void caseANumberAtom(ANumberAtom node);
    void caseAExpressionAtom(AExpressionAtom node);
    void caseASingleArgumentList(ASingleArgumentList node);
    void caseASequenceArgumentList(ASequenceArgumentList node);

    void caseTQuotedText(TQuotedText node);
    void caseTVariableName(TVariableName node);
    void caseTNumberLiteral(TNumberLiteral node);
    void caseTDigit(TDigit node);
    void caseTComma(TComma node);
    void caseTPrintResult(TPrintResult node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTNewline(TNewline node);
    void caseTAssignArrow(TAssignArrow node);
    void caseTFunctionName(TFunctionName node);
    void caseTPow(TPow node);
    void caseTLabel(TLabel node);
    void caseTGoto(TGoto node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
